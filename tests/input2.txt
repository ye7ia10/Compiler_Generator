// clang-format off
// powered by c++11
// by Isaunoya
#include<bits/stdc++.h>
#define rep(i,x,y) for(register int i=(x);i<=(y);++i)
#define Rep(i,x,y) for(register int i=(x);i>=(y);--i)
using namespace std;using db=double;using ll=long long;
using uint=unsigned int;using ull=unsigned long long;
using pii=pair<int,int>;
#define Tp template
#define fir first
#define sec second
Tp<class T>void cmax(T&x,const T&y){if(x<y)x=y;}Tp<class T>void cmin(T&x,const T&y){if(x>y)x=y;}
#define all(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define pb emplace_back
Tp<class T>void sort(vector<T>&v){sort(all(v));}Tp<class T>void reverse(vector<T>&v){reverse(all(v));}
Tp<class T>void unique(vector<T>&v){sort(all(v)),v.erase(unique(all(v)),v.end());}inline void reverse(string&s){reverse(s.begin(),s.end());}
const int SZ=1<<23|233;
struct FILEIN{char qwq[SZ],*S=qwq,*T=qwq,ch;
#ifdef __WIN64
#define GETC getchar
#else
inline char GETC(){return(S==T)&&(T=(S=qwq)+fread(qwq,1,SZ,stdin),S==T)?EOF:*S++;}
#endif
inline FILEIN&operator>>(char&c){while(isspace(c=GETC()));return*this;}inline FILEIN&operator>>(string&s){s.clear();while(isspace(ch=GETC()));if(!~ch)return*this;s=ch;while(!isspace(ch=GETC())&&~ch)s+=ch;return*this;}
inline FILEIN&operator>>(char*str){char*cur=str;while(*cur)*cur++=0;cur=str;while(isspace(ch=GETC()));if(!~ch)return*this;*cur=ch;while(!isspace(ch=GETC())&&~ch)*++cur=ch;*++cur=0;return*this;}
Tp<class T>inline void read(T&x){bool f=0;while((ch=GETC())<48&&~ch)f^=(ch==45);x=~ch?(ch^48):0;while((ch=GETC())>47)x=x*10+(ch^48);x=f?-x:x;}
inline FILEIN&operator>>(int&x){return read(x),*this;}inline FILEIN&operator>>(ll&x){return read(x),*this;}inline FILEIN&operator>>(uint&x){return read(x),*this;}inline FILEIN&operator>>(ull&x){return read(x),*this;}
inline FILEIN&operator>>(double&x){read(x);bool f=x<0;x=f?-x:x;if(ch^'.')return*this;double d=0.1;while((ch=GETC())>47)x+=d*(ch^48),d*=.1;return x=f?-x:x,*this;}
}in;
struct FILEOUT{const static int LIMIT=1<<22;char quq[SZ],ST[233];int sz,O,pw[233];
FILEOUT(){set(7);rep(i,pw[0]=1,9)pw[i]=pw[i-1]*10;}~FILEOUT(){flush();}
inline void flush(){fwrite(quq,1,O,stdout),fflush(stdout),O=0;}
inline FILEOUT&operator<<(char c){return quq[O++]=c,*this;}inline FILEOUT&operator<<(string str){if(O>LIMIT)flush();for(char c:str)quq[O++]=c;return*this;}
inline FILEOUT&operator<<(char*str){if(O>LIMIT)flush();char*cur=str;while(*cur)quq[O++]=(*cur++);return*this;}
Tp<class T>void write(T x){if(O>LIMIT)flush();if(x<0){quq[O++]=45;x=-x;}do{ST[++sz]=x%10^48;x/=10;}while(x);while(sz)quq[O++]=ST[sz--];}
inline FILEOUT&operator<<(int x){return write(x),*this;}inline FILEOUT&operator<<(ll x){return write(x),*this;}inline FILEOUT&operator<<(uint x){return write(x),*this;}inline FILEOUT&operator<<(ull x){return write(x),*this;}
int len,lft,rig;void set(int l){len=l;}inline FILEOUT&operator<<(double x){bool f=x<0;x=f?-x:x,lft=x,rig=1.*(x-lft)*pw[len];return write(f?-lft:lft),quq[O++]='.',write(rig),*this;}
}out;
#define int long long
struct Math{
vector<int>fac,inv;int mod;
void set(int n,int Mod){fac.resize(n+1),inv.resize(n+1),mod=Mod;rep(i,fac[0]=1,n)fac[i]=fac[i-1]*i%mod;inv[n]=qpow(fac[n],mod-2);Rep(i,n-1,0)inv[i]=inv[i+1]*(i+1)%mod;}
int qpow(int x,int y){int ans=1;for(;y;y>>=1,x=x*x%mod)if(y&1)ans=ans*x%mod;return ans;}int C(int n,int m){if(n<0||m<0||n<m)return 0;return fac[n]*inv[m]%mod*inv[n-m]%mod;}
int gcd(int x,int y){return!y?x:gcd(y,x%y);}int lcm(int x,int y){return x*y/gcd(x,y);}
}math;
// clang-format on
 
const int maxn = 4e5 + 54;
int a[maxn];
int sum = 0;
int n , k;
int ans = 1e18;
 
 
struct bit {
	int c[maxn];
	int low(int x) {
		return x & -x;
	}
	
	void add(int x , int y) {
		for( ; x < maxn ; x += low(x))
			c[x] += y; 
	}
	
	int qry(int x) {
		int ans = 0 ;
		for( ; x ; x ^= low(x))
			ans += c[x];
		return ans;
	}
} bit;
 
int b[maxn];
int rev[maxn];
int t[maxn];
signed main(){
	//code begin.
	
	auto init = [&]() {
		in >> n >> k;
		rep(i , 1 , n) in >> a[i];
		rep(i , 1 , n) sum += a[i];
		sort(a + 1 , a + n + 1);
		rep(i , 1 , n) b[i] = a[i];
		int len = unique(b + 1 , b + n + 1) - b - 1;
		rep(i , 1 , n) {
			a[i] = lower_bound(b + 1 , b + len + 1 , a[i]) - b ;
			if(a[i] != a[i - 1]) rev[a[i]] = i;
		}
		rep(i , 1 , n) t[a[i]] ++;
		rep(i , 1 , n) bit.add(a[i], b[a[i]]);
		rev[len + 1] = n + 1;
	} ;
	init();
	auto solve = [&](int x) {
		int qwq = rev[a[x]] - 1;
		int qwq2 = n - rev[a[x] + 1] + 1;
		int sum1 = qwq * (b[a[x]] - 1) - bit.qry(a[x] - 1);
		int sum2 = sum - bit.qry(a[x]) - qwq2 * (b[a[x]] + 1);
		if(t[a[x]] >= k) {
			cmin(ans , 0ll);
			out << ans << '\n';
			exit(0);
		}
		bool flag = 1;
		if(t[a[x]] + qwq >= k) {
			cmin(ans, sum1 + k - t[a[x]]);
			flag = 0;
		}
		if(t[a[x]] + qwq2 >= k) {
			cmin(ans, sum2 + k - t[a[x]]);
			flag = 0;
		}
		if(flag) cmin(ans, sum1 + sum2 + k - t[a[x]]);
	} ;
	rep(i , 1 , n) {
		if(a[i] == a[i - 1]) continue;
		solve(i);
	}
	out << ans << '\n';
	return 0;
	//code end.
}
